{"ast":null,"code":"var _jsxFileName = \"/Users/manas_mm/Desktop/Uni-Sphere/client/src/components/userhome.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Typography, Button, Container, Paper, TextField, Avatar, Box, IconButton, List, ListItem, ListItemText, Modal, MenuItem, Menu } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../auth/AuthContext';\nimport axios from 'axios';\nimport AddIcon from '@mui/icons-material/Add';\nimport CameraCapture from './CameraComponent';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport ArrowBackIosNewIcon from \"@mui/icons-material/ArrowBackIosNew\";\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserHome = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filteredUsers, setFilteredUsers] = useState([]);\n  const {\n    user,\n    logout\n  } = useAuth();\n  const navigate = useNavigate();\n  const [openCamera, setOpenStoryCamera] = useState(false);\n  const [stories, setStories] = useState([]);\n  const [likedPosts, setLikedPosts] = useState([]);\n  const [openStory, setOpenStory] = useState(false);\n  const [currentStories, setCurrentStories] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [storyUser, setstoryUser] = useState([]);\n  const [currentIndexStory, setCurrentIndexStory] = useState(0);\n  // ✅ Function to mark a story as \"viewed\"\n  const markStoryAsViewed = async (storyId, userId) => {\n    try {\n      const postdata = {\n        storyId,\n        userId\n      };\n      // Send post data to backend\n      console.log(\"postdata\", postdata);\n      await axios.put(\"http://localhost:5001/api/story/view\", postdata);\n      console.log(`👀 User ${user === null || user === void 0 ? void 0 : user._id} viewed story ${storyId}`);\n    } catch (error) {\n      console.error(\"🔥 Error updating story view:\", error);\n    }\n  };\n\n  // ✅ Call the view API when a new story is viewed\n  useEffect(() => {\n    if (openStory && currentStories.length > 0) {\n      console.log(currentStories[currentIndexStory]);\n      markStoryAsViewed(currentStories[currentIndexStory].storyId, user === null || user === void 0 ? void 0 : user._id);\n    }\n  }, [currentIndexStory, openStory]);\n\n  // ✅ Move to Next Story\n  const handleNext = () => {\n    if (currentIndexStory < currentStories.length - 1) {\n      setCurrentIndexStory(prevIndex => prevIndex + 1);\n      //console.log(currentIndexStory)\n    } else {\n      handleClose(); // Close modal if it's the last story\n    }\n  };\n\n  // ✅ Move to Previous Story\n  const handlePrev = () => {\n    if (currentIndexStory > 0) {\n      setCurrentIndexStory(prevIndex => prevIndex - 1);\n      console.log(currentIndexStory);\n    }\n  };\n\n  // ✅ Handle Keyboard Navigation (Arrow Keys)\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (event.key === \"ArrowRight\") handleNext();\n      if (event.key === \"ArrowLeft\") handlePrev();\n    };\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  }, [currentIndex]);\n\n  // Open modal and set stories\n  const handleStoryClick = (storyUser, stories) => {\n    console.log(\"storyUser\", storyUser);\n    setstoryUser(storyUser);\n    setCurrentStories(stories);\n    setCurrentIndex(0); // Start with the first story\n    setOpenStory(true);\n  };\n\n  // Close modal\n  const handleClose = () => {\n    setOpenStory(false);\n    setCurrentStories([]);\n    setCurrentIndexStory(0);\n  };\n  const handleImageUpload = async downloadURL => {\n    try {\n      console.log(\"downloadurl\", downloadURL);\n      const postData = {\n        userId: user === null || user === void 0 ? void 0 : user._id,\n        userName: user === null || user === void 0 ? void 0 : user.name,\n        mediaUrl: downloadURL,\n        mediaType: 'image'\n      };\n      console.log('Post Data:', postData); // Log the data before sending\n\n      // Send post data to backend\n      await axios.post('http://localhost:5001/api/story/add', postData);\n      fetchStories();\n      console.log(\"✅ Story uploaded successfully:\", downloadURL);\n      setOpenStoryCamera(false); // Close camera modal after upload\n    } catch (err) {\n      var _err$response;\n      console.error('Error creating post:', ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message); // More detailed error logging\n    }\n  };\n  const groupedStories = stories.reduce((acc, story) => {\n    if (!acc[story.userId]) {\n      acc[story.userId] = {\n        userId: story.userId,\n        stories: []\n      };\n    }\n    acc[story.userId].stories.push(story); // Add all stories of the same user\n    return acc;\n  }, {});\n\n  // Convert the object back to an array\n  const uniqueUserStories = Object.values(groupedStories);\n  const fetchStories = async () => {\n    try {\n      const res = await axios.get('http://localhost:5001/api/story/all');\n      const todaystories = res.data.map(story => ({\n        storyId: story._id,\n        userId: story.userId,\n        userName: story.userName,\n        mediaUrl: story.mediaUrl,\n        mediaType: story.mediaType,\n        views: story.views\n      }));\n      console.log(\"story\", todaystories); // Check the transformed structure\n      setStories(todaystories);\n    } catch (err) {\n      console.error('Error fetching story:', err);\n    }\n  };\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const res = await axios.get('http://localhost:5001/api/posts/all');\n\n        // Transform the data\n        const transformedPosts = res.data.map(post => ({\n          content: post.content,\n          createdAt: new Date(post.createdAt).toLocaleString(),\n          // Optional: Format the date\n          dislikes: post.dislikes,\n          likes: post.likes,\n          postimg: post.postimg,\n          // Assuming postimg is the URL for the post image\n          userId: post.userId,\n          userName: post.userName,\n          postId: post._id // Storing the post ID\n        }));\n        setPosts(transformedPosts);\n        console.log(transformedPosts); // Check the transformed structure\n      } catch (err) {\n        console.error('Error fetching posts:', err);\n      }\n    };\n    const fetchUsers = async () => {\n      try {\n        const res = await axios.get('http://localhost:5001/api/users/all');\n        // Transform the user data\n        const transformedUsers = res.data.map(user => ({\n          id: user._id,\n          name: user.name,\n          bio: user.bio,\n          email: user.email,\n          role: user.role,\n          university: user.university,\n          profileImage: user.profileImage,\n          joinedAt: new Date(user.joinedAt).toLocaleDateString() // Optional: format date\n        }));\n        console.log(transformedUsers); // Check the transformed structure\n        setUsers(transformedUsers);\n        setFilteredUsers(transformedUsers); // Initially set filteredUsers to all users\n      } catch (err) {\n        console.error('Error fetching users:', err);\n      }\n    };\n    fetchPosts();\n    fetchUsers();\n    fetchStories();\n  }, []);\n  const handleSearchChange = e => {\n    const value = e.target.value;\n    setSearchTerm(value);\n    setFilteredUsers(value ? users.filter(u => u.name.toLowerCase().startsWith(value.toLowerCase()) || u.email.toLowerCase().startsWith(value.toLowerCase())) : users);\n  };\n  const handleProfile = userId => {\n    navigate(`/profile/${userId}`);\n  };\n  const handleAddpost = () => {\n    navigate(`/add-post`);\n  };\n  const handleLikeToggle = postId => {\n    setLikedPosts(prev => ({\n      ...prev,\n      [postId]: !prev[postId]\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xs\",\n    sx: {\n      width: 600,\n      height: 800,\n      position: 'relative',\n      overflow: 'hidden',\n      bgcolor: 'white',\n      borderRadius: 3,\n      p: 1,\n      border: '2px solid #000',\n      // Added border,\n      marginTop: '50px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      sx: {\n        textAlign: 'center',\n        fontWeight: 'bold',\n        color: 'black',\n        mt: 1\n      },\n      children: \"PaceX\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        overflowX: 'auto',\n        gap: 1,\n        pb: 1,\n        scrollbarWidth: 'none',\n        '&::-webkit-scrollbar': {\n          display: 'none'\n        },\n        cursor: 'grab'\n      },\n      children: [/*#__PURE__*/_jsxDEV(AddIcon, {\n        sx: {\n          backgroundColor: 'grey',\n          color: 'white',\n          width: 65,\n          height: 65,\n          borderRadius: '50%'\n        },\n        onClick: () => setOpenStoryCamera(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 17\n      }, this), uniqueUserStories.map(({\n        userId,\n        stories\n      }, index) => {\n        const storyUser = users.find(user => user.id === userId);\n        if (!storyUser) return null;\n\n        // Step 2: Check if the current user has viewed all their stories\n        const hasSeenAllStories = stories.every(s => Array.isArray(s.views) && s.views.includes(user === null || user === void 0 ? void 0 : user._id));\n        return /*#__PURE__*/_jsxDEV(Avatar, {\n          sx: {\n            width: 60,\n            height: 60,\n            cursor: \"pointer\",\n            border: `3px solid ${hasSeenAllStories ? \"gray\" : \"#ff4500\"}` // Gray if seen all, else red\n          },\n          src: storyUser.profileImage,\n          onClick: () => handleStoryClick(storyUser, stories)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: openCamera,\n      onClose: () => setOpenStoryCamera(false),\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          position: \"absolute\",\n          marginTop: '50px',\n          left: \"50%\",\n          transform: \"translateX(-50%)\",\n          width: 430,\n          bgcolor: \"white\",\n          boxShadow: 24,\n          borderRadius: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(CameraCapture, {\n          onImageUpload: handleImageUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: openStory,\n      onClose: handleClose,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          position: \"absolute\",\n          left: \"50%\",\n          transform: \"translateX(-50%)\",\n          width: 430,\n          height: 800,\n          bgcolor: \"black\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          borderRadius: 2,\n          overflow: \"hidden\",\n          mt: 6,\n          position: \"relative\"\n        },\n        children: [currentStories.length > 0 && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: currentStories[currentIndexStory].mediaUrl // Ensure story has `mediaUrl`\n          ,\n          alt: `Story ${currentIndexStory + 1}`,\n          style: {\n            width: 430,\n            height: 800,\n            aspectRatio: \"3/5\",\n            objectFit: \"cover\",\n            borderRadius: 10\n          }\n        }, currentIndexStory, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleClose,\n          sx: {\n            position: \"absolute\",\n            top: 10,\n            right: 10,\n            backgroundColor: \"rgba(255, 255, 255, 0.5)\",\n            color: \"white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 21\n        }, this), storyUser && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            position: \"absolute\",\n            top: 10,\n            left: 10,\n            display: \"flex\",\n            alignItems: \"center\",\n            gap: 1,\n            borderRadius: \"20px\",\n            padding: \"5px 10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            src: storyUser.profileImage,\n            sx: {\n              width: 40,\n              height: 40,\n              cursor: \"pointer\"\n            },\n            onClick: () => handleProfile(storyUser.userId)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              fontWeight: \"bold\",\n              color: \"black\"\n            },\n            children: storyUser.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 25\n        }, this), currentIndexStory > 0 && /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handlePrev,\n          sx: {\n            position: \"absolute\",\n            left: 10,\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            backgroundColor: \"rgba(255, 255, 255, 0.3)\",\n            color: \"white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(ArrowBackIosNewIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 25\n        }, this), currentIndexStory < currentStories.length - 1 && /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleNext,\n          sx: {\n            position: \"absolute\",\n            right: 10,\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            backgroundColor: \"rgba(255, 255, 255, 0.3)\",\n            color: \"white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(ArrowForwardIosIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      placeholder: \"Search users...\",\n      value: searchTerm,\n      onChange: handleSearchChange,\n      sx: {\n        mt: 2,\n        bgcolor: 'white',\n        borderRadius: 1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 13\n    }, this), searchTerm && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        maxHeight: '200px',\n        overflowY: 'auto',\n        border: '1px solid #ccc',\n        borderRadius: '4px',\n        mt: 1,\n        position: 'absolute',\n        width: '100%',\n        zIndex: 100\n      },\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: filteredUsers.slice(0, 5).map(user => /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          onClick: () => handleProfile(user.id),\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            src: user.profileImage,\n            sx: {\n              width: 30,\n              height: 30,\n              mr: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: `${user.name} - ${user.email}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 33\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 2,\n        height: 500,\n        overflowY: 'auto',\n        '&::-webkit-scrollbar': {\n          display: 'none' // Hides the scrollbar\n        },\n        scrollbarWidth: 'none' // Hides scrollbar in Firefox\n      },\n      children: posts.map((post, index) => {\n        // Find the user who made the post\n        const postUser = users.find(user => user.id === post.userId);\n        return /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2,\n            mb: 2,\n            backgroundColor: 'transparent'\n          },\n          children: [postUser && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              src: postUser.profileImage,\n              sx: {\n                width: 40,\n                height: 40\n              },\n              onClick: () => handleProfile(postUser.id) // Navigate to profile on click\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              sx: {\n                fontWeight: 'bold'\n              },\n              children: postUser.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 33\n          }, this), post.postimg && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 2,\n              maxHeight: 400,\n              overflow: 'hidden'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: post.postimg,\n              alt: \"Post\",\n              style: {\n                width: '100%',\n                height: 'auto'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 33\n          }, this), post.content && /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              wordWrap: 'break-word',\n              mt: 2\n            },\n            children: post.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              mt: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: () => handleLikeToggle(post._id),\n              children: /*#__PURE__*/_jsxDEV(FavoriteIcon, {\n                sx: {\n                  color: likedPosts[post._id] ? 'red' : 'gray'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 509,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: likedPosts[post._id] ? 'Liked' : 'Like'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-evenly',\n        alignItems: 'center',\n        gap: 0.5,\n        position: 'absolute',\n        bottom: 0,\n        left: '50%',\n        transform: 'translateX(-50%)',\n        backgroundColor: 'RGBA(0,0,0,0.7)',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: () => handleProfile(user._id),\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          src: user.profileImage,\n          sx: {\n            width: 50,\n            height: 50,\n            borderRadius: '0%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: handleAddpost,\n        sx: {\n          width: 50,\n          height: 50,\n          bgcolor: '#ff4500',\n          color: 'white',\n          borderRadius: '0%'\n        },\n        children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 9\n  }, this);\n};\n_s(UserHome, \"IDl90fFkyXGmu3+SUNDpofaUE0s=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = UserHome;\nexport default UserHome;\nvar _c;\n$RefreshReg$(_c, \"UserHome\");","map":{"version":3,"names":["React","useState","useEffect","Typography","Button","Container","Paper","TextField","Avatar","Box","IconButton","List","ListItem","ListItemText","Modal","MenuItem","Menu","useNavigate","useAuth","axios","AddIcon","CameraCapture","FavoriteIcon","CloseIcon","ArrowBackIosNewIcon","ArrowForwardIosIcon","jsxDEV","_jsxDEV","UserHome","_s","posts","setPosts","users","setUsers","searchTerm","setSearchTerm","filteredUsers","setFilteredUsers","user","logout","navigate","openCamera","setOpenStoryCamera","stories","setStories","likedPosts","setLikedPosts","openStory","setOpenStory","currentStories","setCurrentStories","currentIndex","setCurrentIndex","storyUser","setstoryUser","currentIndexStory","setCurrentIndexStory","markStoryAsViewed","storyId","userId","postdata","console","log","put","_id","error","length","handleNext","prevIndex","handleClose","handlePrev","handleKeyDown","event","key","window","addEventListener","removeEventListener","handleStoryClick","handleImageUpload","downloadURL","postData","userName","name","mediaUrl","mediaType","post","fetchStories","err","_err$response","response","data","message","groupedStories","reduce","acc","story","push","uniqueUserStories","Object","values","res","get","todaystories","map","views","fetchPosts","transformedPosts","content","createdAt","Date","toLocaleString","dislikes","likes","postimg","postId","fetchUsers","transformedUsers","id","bio","email","role","university","profileImage","joinedAt","toLocaleDateString","handleSearchChange","e","value","target","filter","u","toLowerCase","startsWith","handleProfile","handleAddpost","handleLikeToggle","prev","maxWidth","sx","width","height","position","overflow","bgcolor","borderRadius","p","border","marginTop","children","variant","textAlign","fontWeight","color","mt","fileName","_jsxFileName","lineNumber","columnNumber","display","overflowX","gap","pb","scrollbarWidth","cursor","backgroundColor","onClick","index","find","hasSeenAllStories","every","s","Array","isArray","includes","src","open","onClose","left","transform","boxShadow","onImageUpload","justifyContent","alignItems","alt","style","aspectRatio","objectFit","top","right","padding","fullWidth","placeholder","onChange","maxHeight","overflowY","zIndex","slice","button","mr","primary","postUser","mb","wordWrap","bottom","_c","$RefreshReg$"],"sources":["/Users/manas_mm/Desktop/Uni-Sphere/client/src/components/userhome.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Typography, Button, Container, Paper, TextField, Avatar, Box, IconButton, List, ListItem, ListItemText, Modal, MenuItem, Menu } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../auth/AuthContext';\nimport axios from 'axios';\nimport AddIcon from '@mui/icons-material/Add';\nimport CameraCapture from './CameraComponent';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport ArrowBackIosNewIcon from \"@mui/icons-material/ArrowBackIosNew\";\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\n\n\nconst UserHome = () => {\n    const [posts, setPosts] = useState([]);\n    const [users, setUsers] = useState([]);\n    const [searchTerm, setSearchTerm] = useState('');\n    const [filteredUsers, setFilteredUsers] = useState([]);\n    const { user, logout } = useAuth();\n    const navigate = useNavigate();\n    const [openCamera, setOpenStoryCamera] = useState(false);\n    const [stories, setStories] = useState([]);\n    const [likedPosts, setLikedPosts] = useState([]);\n    const [openStory, setOpenStory] = useState(false);\n    const [currentStories, setCurrentStories] = useState([]);\n    const [currentIndex, setCurrentIndex] = useState(0);\n    const [storyUser, setstoryUser] = useState([]);\n    const [currentIndexStory, setCurrentIndexStory] = useState(0);\n    // ✅ Function to mark a story as \"viewed\"\n    const markStoryAsViewed = async (storyId, userId) => {\n        try {\n            const postdata = {\n                storyId, userId\n            }\n            // Send post data to backend\n            console.log(\"postdata\", postdata)\n            await axios.put(\"http://localhost:5001/api/story/view\", postdata);\n            console.log(`👀 User ${user?._id} viewed story ${storyId}`);\n        } catch (error) {\n            console.error(\"🔥 Error updating story view:\", error);\n        }\n    };\n\n    // ✅ Call the view API when a new story is viewed\n    useEffect(() => {\n        if (openStory && currentStories.length > 0) {\n            console.log(currentStories[currentIndexStory]);\n            markStoryAsViewed(currentStories[currentIndexStory].storyId, user?._id);\n        }\n    }, [currentIndexStory, openStory]);\n\n    // ✅ Move to Next Story\n    const handleNext = () => {\n        if (currentIndexStory < currentStories.length - 1) {\n            setCurrentIndexStory((prevIndex) => prevIndex + 1);\n            //console.log(currentIndexStory)\n        } else {\n            handleClose(); // Close modal if it's the last story\n        }\n    };\n\n    // ✅ Move to Previous Story\n    const handlePrev = () => {\n        if (currentIndexStory > 0) {\n            setCurrentIndexStory((prevIndex) => prevIndex - 1);\n            console.log(currentIndexStory)\n        }\n    };\n\n    // ✅ Handle Keyboard Navigation (Arrow Keys)\n    useEffect(() => {\n        const handleKeyDown = (event) => {\n            if (event.key === \"ArrowRight\") handleNext();\n            if (event.key === \"ArrowLeft\") handlePrev();\n        };\n        window.addEventListener(\"keydown\", handleKeyDown);\n        return () => window.removeEventListener(\"keydown\", handleKeyDown);\n    }, [currentIndex]);\n\n    // Open modal and set stories\n    const handleStoryClick = (storyUser, stories) => {\n        console.log(\"storyUser\", storyUser);\n        setstoryUser(storyUser);\n        setCurrentStories(stories);\n        setCurrentIndex(0);  // Start with the first story\n        setOpenStory(true);\n    };\n\n    // Close modal\n    const handleClose = () => {\n        setOpenStory(false);\n        setCurrentStories([]);\n        setCurrentIndexStory(0);\n    };\n\n    const handleImageUpload = async (downloadURL) => {\n\n        try {\n            console.log(\"downloadurl\", downloadURL);\n            const postData = {\n                userId: user?._id,\n                userName: user?.name,\n                mediaUrl: downloadURL,\n                mediaType: 'image'\n\n            };\n\n            console.log('Post Data:', postData);  // Log the data before sending\n\n            // Send post data to backend\n            await axios.post('http://localhost:5001/api/story/add', postData);\n\n            fetchStories();\n\n            console.log(\"✅ Story uploaded successfully:\", downloadURL);\n            setOpenStoryCamera(false); // Close camera modal after upload\n        } catch (err) {\n            console.error('Error creating post:', err.response?.data || err.message);  // More detailed error logging\n        }\n    };\n    const groupedStories = stories.reduce((acc, story) => {\n        if (!acc[story.userId]) {\n            acc[story.userId] = { userId: story.userId, stories: [] };\n        }\n        acc[story.userId].stories.push(story); // Add all stories of the same user\n        return acc;\n    }, {});\n\n    // Convert the object back to an array\n    const uniqueUserStories = Object.values(groupedStories);\n\n    const fetchStories = async () => {\n        try {\n            const res = await axios.get('http://localhost:5001/api/story/all');\n            const todaystories = res.data.map(story => ({\n                storyId: story._id,\n                userId: story.userId,\n                userName: story.userName,\n                mediaUrl: story.mediaUrl,\n                mediaType: story.mediaType,\n                views: story.views\n            }));\n            console.log(\"story\", todaystories); // Check the transformed structure\n            setStories(todaystories);\n        }\n        catch (err) {\n            console.error('Error fetching story:', err);\n        }\n    }\n\n    useEffect(() => {\n        const fetchPosts = async () => {\n            try {\n                const res = await axios.get('http://localhost:5001/api/posts/all');\n\n                // Transform the data\n                const transformedPosts = res.data.map(post => ({\n                    content: post.content,\n                    createdAt: new Date(post.createdAt).toLocaleString(), // Optional: Format the date\n                    dislikes: post.dislikes,\n                    likes: post.likes,\n                    postimg: post.postimg, // Assuming postimg is the URL for the post image\n                    userId: post.userId,\n                    userName: post.userName,\n                    postId: post._id, // Storing the post ID\n                }));\n\n                setPosts(transformedPosts);\n                console.log(transformedPosts); // Check the transformed structure\n            } catch (err) {\n                console.error('Error fetching posts:', err);\n            }\n        };\n\n\n        const fetchUsers = async () => {\n            try {\n                const res = await axios.get('http://localhost:5001/api/users/all');\n                // Transform the user data\n                const transformedUsers = res.data.map(user => ({\n                    id: user._id,\n                    name: user.name,\n                    bio: user.bio,\n                    email: user.email,\n                    role: user.role,\n                    university: user.university,\n                    profileImage: user.profileImage,\n                    joinedAt: new Date(user.joinedAt).toLocaleDateString(), // Optional: format date\n                }));\n                console.log(transformedUsers); // Check the transformed structure\n                setUsers(transformedUsers);\n                setFilteredUsers(transformedUsers); // Initially set filteredUsers to all users\n            } catch (err) {\n                console.error('Error fetching users:', err);\n            }\n        };\n\n\n        fetchPosts();\n        fetchUsers();\n        fetchStories();\n    }, []);\n\n\n    const handleSearchChange = (e) => {\n        const value = e.target.value;\n        setSearchTerm(value);\n        setFilteredUsers(\n            value\n                ? users.filter((u) =>\n                    u.name.toLowerCase().startsWith(value.toLowerCase()) ||\n                    u.email.toLowerCase().startsWith(value.toLowerCase())\n                )\n                : users\n        );\n    };\n\n    const handleProfile = (userId) => {\n        navigate(`/profile/${userId}`);\n    };\n    const handleAddpost = () => {\n        navigate(`/add-post`);\n    };\n\n\n    const handleLikeToggle = (postId) => {\n        setLikedPosts((prev) => ({\n            ...prev,\n            [postId]: !prev[postId],\n        }));\n    };\n\n    return (\n        <Container\n            maxWidth=\"xs\"\n            sx={{\n                width: 600,\n                height: 800,\n                position: 'relative',\n                overflow: 'hidden',\n                bgcolor: 'white',\n                borderRadius: 3,\n                p: 1,\n                border: '2px solid #000', // Added border,\n                marginTop: '50px'\n            }}\n        >\n            {/* App Name */}\n            <Typography\n                variant=\"h5\"\n                sx={{\n                    textAlign: 'center',\n                    fontWeight: 'bold',\n                    color: 'black',\n                    mt: 1\n                }}\n            >\n                PaceX\n            </Typography>\n\n            {/* Stories Section */}\n            <Box\n                sx={{\n                    display: 'flex',\n                    overflowX: 'auto',\n                    gap: 1,\n                    pb: 1,\n                    scrollbarWidth: 'none',\n                    '&::-webkit-scrollbar': { display: 'none' },\n                    cursor: 'grab',\n                }}\n            >\n                <AddIcon sx={{ backgroundColor: 'grey', color: 'white', width: 65, height: 65, borderRadius: '50%' }}\n                    onClick={() => setOpenStoryCamera(true)} />\n                {uniqueUserStories.map(({ userId, stories }, index) => {\n                    const storyUser = users.find((user) => user.id === userId);\n                    if (!storyUser) return null;\n\n                    // Step 2: Check if the current user has viewed all their stories\n                    const hasSeenAllStories = stories.every((s) => Array.isArray(s.views) && s.views.includes(user?._id));\n\n                    return (\n                        <Avatar\n                            key={index}\n                            sx={{\n                                width: 60,\n                                height: 60,\n                                cursor: \"pointer\",\n                                border: `3px solid ${hasSeenAllStories ? \"gray\" : \"#ff4500\"}`, // Gray if seen all, else red\n                            }}\n                            src={storyUser.profileImage}\n                            onClick={() => handleStoryClick(storyUser, stories)}\n                        />\n                    );\n                })}\n            </Box>\n            <Modal open={openCamera} onClose={() => setOpenStoryCamera(false)}>\n                <Box\n                    sx={{\n                        position: \"absolute\",\n                        marginTop: '50px',\n                        left: \"50%\",\n                        transform: \"translateX(-50%)\",\n                        width: 430,\n                        bgcolor: \"white\",\n                        boxShadow: 24,\n\n                        borderRadius: 2,\n                    }}\n                >\n                    <CameraCapture onImageUpload={handleImageUpload} />\n                </Box>\n            </Modal>\n            <Modal open={openStory} onClose={handleClose}>\n                <Box\n                    sx={{\n                        position: \"absolute\",\n                        left: \"50%\",\n                        transform: \"translateX(-50%)\",\n                        width: 430,\n                        height: 800,\n                        bgcolor: \"black\",\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                        borderRadius: 2,\n                        overflow: \"hidden\",\n                        mt: 6,\n                        position: \"relative\",\n                    }}\n                >\n                    {/* ✅ Show Only One Story at a Time */}\n                    {currentStories.length > 0 && (\n                        <img\n                            key={currentIndexStory}\n                            src={currentStories[currentIndexStory].mediaUrl}  // Ensure story has `mediaUrl`\n                            alt={`Story ${currentIndexStory + 1}`}\n                            style={{\n                                width: 430,\n                                height: 800,\n                                aspectRatio: \"3/5\",\n                                objectFit: \"cover\",\n                                borderRadius: 10,\n                            }}\n                        />\n                    )}\n\n                    {/* ❌ Close Button (Top-Right) */}\n                    <IconButton\n                        onClick={handleClose}\n                        sx={{\n                            position: \"absolute\",\n                            top: 10,\n                            right: 10,\n                            backgroundColor: \"rgba(255, 255, 255, 0.5)\",\n                            color: \"white\",\n                        }}\n                    >\n                        <CloseIcon />\n                    </IconButton>\n\n                    {/* 👤 Story User Info (Top-Left Overlay) */}\n                    {storyUser && (\n                        <Box\n                            sx={{\n                                position: \"absolute\",\n                                top: 10,\n                                left: 10,\n                                display: \"flex\",\n                                alignItems: \"center\",\n                                gap: 1,\n\n                                borderRadius: \"20px\",\n                                padding: \"5px 10px\",\n                            }}\n                        >\n                            <Avatar\n                                src={storyUser.profileImage}\n                                sx={{ width: 40, height: 40, cursor: \"pointer\" }}\n                                onClick={() => handleProfile(storyUser.userId)}\n                            />\n                            <Typography variant=\"h6\" sx={{ fontWeight: \"bold\", color: \"black\" }}>\n                                {storyUser.name}\n                            </Typography>\n                        </Box>\n                    )}\n\n                    {/* ◀️ Left (Previous) Button */}\n                    {currentIndexStory > 0 && (\n                        <IconButton\n                            onClick={handlePrev}\n                            sx={{\n                                position: \"absolute\",\n                                left: 10,\n                                top: \"50%\",\n                                transform: \"translateY(-50%)\",\n                                backgroundColor: \"rgba(255, 255, 255, 0.3)\",\n                                color: \"white\",\n                            }}\n                        >\n                            <ArrowBackIosNewIcon />\n                        </IconButton>\n                    )}\n\n                    {/* ▶️ Right (Next) Button */}\n                    {currentIndexStory < currentStories.length - 1 && (\n                        <IconButton\n                            onClick={handleNext}\n                            sx={{\n                                position: \"absolute\",\n                                right: 10,\n                                top: \"50%\",\n                                transform: \"translateY(-50%)\",\n                                backgroundColor: \"rgba(255, 255, 255, 0.3)\",\n                                color: \"white\",\n                            }}\n                        >\n                            <ArrowForwardIosIcon />\n                        </IconButton>\n                    )}\n                </Box>\n            </Modal>\n            {/* Search Users */}\n            <TextField\n                fullWidth\n                placeholder=\"Search users...\"\n                value={searchTerm}\n                onChange={handleSearchChange}\n                sx={{ mt: 2, bgcolor: 'white', borderRadius: 1 }}\n            />\n\n            {/* Dropdown for filtered users */}\n            {searchTerm && (\n                <Box\n                    sx={{\n                        maxHeight: '200px',\n                        overflowY: 'auto',\n                        border: '1px solid #ccc',\n                        borderRadius: '4px',\n                        mt: 1,\n                        position: 'absolute',\n                        width: '100%',\n                        zIndex: 100\n                    }}\n                >\n                    <List>\n                        {filteredUsers.slice(0, 5).map((user) => (\n                            <ListItem button key={user.id} onClick={() => handleProfile(user.id)}>\n                                <Avatar\n                                    src={user.profileImage}\n                                    sx={{ width: 30, height: 30, mr: 2 }}\n                                />\n                                <ListItemText primary={`${user.name} - ${user.email}`} />\n                            </ListItem>\n                        ))}\n                    </List>\n                </Box>\n            )}\n\n\n            {/* Feed */}\n            <Box\n                sx={{\n                    mt: 2,\n                    height: 500,\n                    overflowY: 'auto',\n                    '&::-webkit-scrollbar': {\n                        display: 'none',  // Hides the scrollbar\n                    },\n                    scrollbarWidth: 'none' // Hides scrollbar in Firefox\n                }}\n            >\n                {posts.map((post, index) => {\n                    // Find the user who made the post\n                    const postUser = users.find((user) => user.id === post.userId);\n                    return (\n                        <Paper key={index} sx={{ p: 2, mb: 2, backgroundColor: 'transparent' }}>\n                            {/* Display the username and profile pic above each post */}\n                            {postUser && (\n                                <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                                    <Avatar\n                                        src={postUser.profileImage}\n                                        sx={{ width: 40, height: 40 }}\n                                        onClick={() => handleProfile(postUser.id)} // Navigate to profile on click\n                                    />\n                                    <Typography variant=\"h6\" sx={{ fontWeight: 'bold' }}>\n                                        {postUser.name}\n                                    </Typography>\n                                </Box>\n                            )}\n\n                            {/* Display the post's image if available */}\n                            {post.postimg && (\n                                <Box sx={{ mt: 2, maxHeight: 400, overflow: 'hidden' }}>\n                                    <img src={post.postimg} alt=\"Post\" style={{ width: '100%', height: 'auto' }} />\n                                </Box>\n                            )}\n\n                            {/* Display the text content if available */}\n                            {post.content && (\n                                <Typography sx={{ wordWrap: 'break-word', mt: 2 }}>\n                                    {post.content}\n                                </Typography>\n                            )}\n\n                            {/* Like Button */}\n                            <Box sx={{ display: 'flex', alignItems: 'center', mt: 1 }}>\n                                <IconButton onClick={() => handleLikeToggle(post._id)}>\n                                    <FavoriteIcon sx={{ color: likedPosts[post._id] ? 'red' : 'gray' }} />\n                                </IconButton>\n                                <Typography>{likedPosts[post._id] ? 'Liked' : 'Like'}</Typography>\n                            </Box>\n                        </Paper>\n                    );\n                })}\n            </Box>\n\n            {/* Container for Profile & Add Post Buttons */}\n            <Box sx={{\n                display: 'flex',\n                justifyContent: 'space-evenly',\n                alignItems: 'center',\n                gap: 0.5,\n                position: 'absolute',\n                bottom: 0,\n                left: '50%',\n                transform: 'translateX(-50%)',\n                backgroundColor: 'RGBA(0,0,0,0.7)',\n                width: '100%'\n            }}>\n                {/* Profile Button */}\n                <IconButton onClick={() => handleProfile(user._id)}>\n                    <Avatar src={user.profileImage} sx={{ width: 50, height: 50, borderRadius: '0%' }} />\n                </IconButton>\n\n                {/* Add Post Button */}\n                <IconButton onClick={handleAddpost}\n                    sx={{ width: 50, height: 50, bgcolor: '#ff4500', color: 'white', borderRadius: '0%' }}>\n                    <AddIcon />\n                </IconButton>\n\n            </Box>\n\n        </Container>\n    );\n};\n\nexport default UserHome;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}