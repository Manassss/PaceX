{"ast":null,"code":"var _jsxFileName = \"/Users/manas_mm/Desktop/Uni-Sphere/client/src/components/CameraComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport Webcam from \"react-webcam\";\nimport { Button, Box, Typography, IconButton } from \"@mui/material\";\nimport { storage } from \"../firebase\"; // ✅ Import Firebase Storage\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\"; // ✅ Upload Icon\nimport ReplayIcon from \"@mui/icons-material/Replay\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CameraCapture = ({\n  userId,\n  onImageUpload\n}) => {\n  _s();\n  const webcamRef = useRef(null);\n  const [capturedImage, setCapturedImage] = useState(null);\n  const [uploading, setUploading] = useState(false);\n\n  // 📸 Capture Photo from Webcam\n  const capturePhoto = () => {\n    const imageSrc = webcamRef.current.getScreenshot(); // Get image from webcam\n    setCapturedImage(imageSrc); // Store it in state\n  };\n\n  // 🖼️ Upload Captured Image to Firebase Storage\n  const uploadPhoto = async () => {\n    if (!capturedImage) return alert(\"Capture an image first!\");\n    setUploading(true);\n    try {\n      // Convert base64 to Blob\n      const currentDateTime = new Date().toLocaleString();\n      const blob = await fetch(capturedImage).then(res => res.blob());\n      const fileName = `storyPictures/${userId}/captured_photo_${currentDateTime}.jpg`;\n      const storageRef = ref(storage, fileName);\n      const uploadTask = uploadBytesResumable(storageRef, blob);\n      uploadTask.on(\"state_changed\", snapshot => {\n        console.log(`Upload Progress: ${snapshot.bytesTransferred / snapshot.totalBytes * 100}%`);\n      }, error => {\n        console.error(\"Upload error:\", error);\n        alert(\"Upload failed. Check Firebase Storage permissions.\");\n      }, async () => {\n        const downloadURL = await getDownloadURL(uploadTask.snapshot.ref);\n        setUploading(false);\n        onImageUpload(downloadURL); // ✅ Pass image URL to parent component\n        alert(\"Photo uploaded successfully!\");\n      });\n    } catch (err) {\n      console.error(\"Error uploading photo:\", err);\n      setUploading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    sx: {\n      border: \"2px solid #ccc\",\n      borderRadius: 3,\n      width: '435px',\n      height: '790px',\n      backgroundColor: 'RGBA(255,255,255,1)'\n    },\n    children: [!capturedImage ? /*#__PURE__*/_jsxDEV(Webcam, {\n      audio: false,\n      ref: webcamRef,\n      screenshotFormat: \"image/jpeg\",\n      videoConstraints: {\n        facingMode: \"user\"\n      },\n      style: {\n        width: \"100%\",\n        // Make it responsive\n        height: \"auto\",\n        // Auto-adjust height\n        aspectRatio: '3/5',\n        // Adjust the aspect ratio (4/3, 16/9, etc.)\n        borderRadius: \"10px\",\n        objectFit: \"cover\"\n        // Prevent distortion\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n      src: capturedImage,\n      alt: \"Captured\",\n      style: {\n        width: 430,\n        height: 800,\n        aspectRatio: '3/5',\n        objectFit: 'cover',\n        borderRadius: 10\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      gap: 2,\n      marginTop: 1,\n      children: !capturedImage ? /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: capturePhoto,\n        children: \"Capture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          sx: {\n            position: \"absolute\",\n            bottom: 10,\n            left: 10,\n            backgroundColor: \"green\",\n            color: \"white\",\n            \"&:hover\": {\n              backgroundColor: \"darkgreen\"\n            }\n          },\n          onClick: uploadPhoto,\n          disabled: uploading,\n          children: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n            fontSize: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          sx: {\n            position: \"absolute\",\n            bottom: 10,\n            right: 10,\n            backgroundColor: \"red\",\n            color: \"white\",\n            \"&:hover\": {\n              backgroundColor: \"darkred\"\n            }\n          },\n          onClick: () => setCapturedImage(null),\n          children: /*#__PURE__*/_jsxDEV(ReplayIcon, {\n            fontSize: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(CameraCapture, \"GPEkuyN5udRqvAcBbCVZMa4AXuE=\");\n_c = CameraCapture;\nexport default CameraCapture;\nvar _c;\n$RefreshReg$(_c, \"CameraCapture\");","map":{"version":3,"names":["React","useRef","useState","Webcam","Button","Box","Typography","IconButton","storage","ref","uploadBytesResumable","getDownloadURL","CheckCircleIcon","ReplayIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","CameraCapture","userId","onImageUpload","_s","webcamRef","capturedImage","setCapturedImage","uploading","setUploading","capturePhoto","imageSrc","current","getScreenshot","uploadPhoto","alert","currentDateTime","Date","toLocaleString","blob","fetch","then","res","fileName","storageRef","uploadTask","on","snapshot","console","log","bytesTransferred","totalBytes","error","downloadURL","err","display","flexDirection","alignItems","sx","border","borderRadius","width","height","backgroundColor","children","audio","screenshotFormat","videoConstraints","facingMode","style","aspectRatio","objectFit","_jsxFileName","lineNumber","columnNumber","src","alt","justifyContent","gap","marginTop","variant","color","onClick","position","bottom","left","disabled","fontSize","right","_c","$RefreshReg$"],"sources":["/Users/manas_mm/Desktop/Uni-Sphere/client/src/components/CameraComponent.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\nimport Webcam from \"react-webcam\";\nimport { Button, Box, Typography, IconButton } from \"@mui/material\";\nimport { storage } from \"../firebase\";  // ✅ Import Firebase Storage\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\";  // ✅ Upload Icon\nimport ReplayIcon from \"@mui/icons-material/Replay\";\n\n\nconst CameraCapture = ({ userId, onImageUpload }) => {\n    const webcamRef = useRef(null);\n    const [capturedImage, setCapturedImage] = useState(null);\n    const [uploading, setUploading] = useState(false);\n\n    // 📸 Capture Photo from Webcam\n    const capturePhoto = () => {\n        const imageSrc = webcamRef.current.getScreenshot(); // Get image from webcam\n        setCapturedImage(imageSrc); // Store it in state\n    };\n\n    // 🖼️ Upload Captured Image to Firebase Storage\n    const uploadPhoto = async () => {\n        if (!capturedImage) return alert(\"Capture an image first!\");\n\n        setUploading(true);\n        try {\n            // Convert base64 to Blob\n            const currentDateTime = new Date().toLocaleString();\n            const blob = await fetch(capturedImage).then((res) => res.blob());\n            const fileName = `storyPictures/${userId}/captured_photo_${currentDateTime}.jpg`;\n\n            const storageRef = ref(storage, fileName);\n            const uploadTask = uploadBytesResumable(storageRef, blob);\n\n            uploadTask.on(\n                \"state_changed\",\n                (snapshot) => {\n                    console.log(`Upload Progress: ${(snapshot.bytesTransferred / snapshot.totalBytes) * 100}%`);\n                },\n                (error) => {\n                    console.error(\"Upload error:\", error);\n                    alert(\"Upload failed. Check Firebase Storage permissions.\");\n                },\n                async () => {\n                    const downloadURL = await getDownloadURL(uploadTask.snapshot.ref);\n                    setUploading(false);\n                    onImageUpload(downloadURL);  // ✅ Pass image URL to parent component\n                    alert(\"Photo uploaded successfully!\");\n                }\n            );\n        } catch (err) {\n            console.error(\"Error uploading photo:\", err);\n            setUploading(false);\n        }\n    };\n\n    return (\n        <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" sx={{ border: \"2px solid #ccc\", borderRadius: 3, width: '435px', height: '790px', backgroundColor: 'RGBA(255,255,255,1)' }}>\n\n\n            {/* Camera Preview */}\n            {!capturedImage ? (\n                <Webcam\n                    audio={false}\n                    ref={webcamRef}\n                    screenshotFormat=\"image/jpeg\"\n\n                    videoConstraints={{ facingMode: \"user\" }}\n                    style={{\n                        width: \"100%\",          // Make it responsive\n                        height: \"auto\",         // Auto-adjust height\n                        aspectRatio: '3/5',    // Adjust the aspect ratio (4/3, 16/9, etc.)\n                        borderRadius: \"10px\",\n\n                        objectFit: \"cover\",\n                        // Prevent distortion\n                    }}\n\n                />\n            ) : (\n                <img src={capturedImage} alt=\"Captured\" style={{ width: 430, height: 800, aspectRatio: '3/5', objectFit: 'cover', borderRadius: 10 }} />\n            )}\n\n            {/* Buttons */}\n            <Box display=\"flex\" justifyContent=\"center\" gap={2} marginTop={1} >\n                {!capturedImage ? (\n                    <Button variant=\"contained\" color=\"primary\" onClick={capturePhoto}>Capture</Button>\n                ) : (\n                    <>\n                        {/* Upload (✔ Tick Mark) - Bottom Left */}\n                        <IconButton\n                            sx={{\n                                position: \"absolute\",\n                                bottom: 10,\n                                left: 10,\n                                backgroundColor: \"green\",\n                                color: \"white\",\n                                \"&:hover\": { backgroundColor: \"darkgreen\" }\n                            }}\n                            onClick={uploadPhoto}\n                            disabled={uploading}\n                        >\n                            <CheckCircleIcon fontSize=\"large\" />\n                        </IconButton>\n\n                        {/* Retake (🔄 Retry Icon) - Bottom Right */}\n                        <IconButton\n                            sx={{\n                                position: \"absolute\",\n                                bottom: 10,\n                                right: 10,\n                                backgroundColor: \"red\",\n                                color: \"white\",\n                                \"&:hover\": { backgroundColor: \"darkred\" }\n                            }}\n                            onClick={() => setCapturedImage(null)}\n                        >\n                            <ReplayIcon fontSize=\"large\" />\n                        </IconButton>\n                    </>\n                )}\n            </Box>\n        </Box>\n    );\n};\n\nexport default CameraCapture;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}